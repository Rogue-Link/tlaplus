<?xml version="1.0" encoding="UTF-8"?>
<project
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
  xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>

  <!-- TODO: test-dist? -->
  <!-- TODO: test-dist-long? -->
  <!-- TODO: test-verify? -->
  <!-- TODO: whitespace tests ("TLA+ Tools", ws.class.dir)? -->
  <!-- TODO: benchmark? -->

  <groupId>org.lamport.tlatools</groupId>
  <artifactId>tlatools</artifactId>
  <version>1.8.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <organization>
    <name>The TLA+ Foundation</name>
    <url>https://lamport.azurewebsites.net/tla/tla.html</url>
  </organization>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/tlaplus/tlaplus/issues</url>
  </issueManagement>

  <scm>
    <connection>scm:git:https://github.com/tlaplus/tlaplus</connection>
    <developerConnection>scm:git:https://github.com/tlaplus/tlaplus</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.release>11</maven.compiler.release>
  </properties>

  <build>
    <sourceDirectory>src</sourceDirectory>
    <testSourceDirectory>test</testSourceDirectory>
    <resources>
      <resource>
        <directory>src</directory>
        <excludes>
          <exclude>**/.gitignore</exclude>
          <exclude>**/*.java</exclude>
          <exclude>**/*.~*</exclude>
          <exclude>**/*##*</exclude>
          <exclude>**/*.09-09-07</exclude>
          <exclude>**/*.09-07-02</exclude>
          <exclude>**/*.11-02-10</exclude>
          <exclude>**/*.jpg</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src-aj</directory>
        <excludes>
          <exclude>**/*.java</exclude>
          <exclude>**/*.aj</exclude>
        </excludes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>test</directory>
        <includes>
          <include>**/*.dot</include>
          <include>**/*.dump</include>
        </includes>
      </testResource>
      <testResource>
        <!--
          TODO: This has to be duplicated from the regular <resources> block
                because SimpleFilenameToStream gets confused when there are
                multiple "tla2sany" directories on the classpath.  If we
                improve that class then we can avoid this duplication.
        -->
        <directory>src</directory>
        <excludes>
          <exclude>**/*.java</exclude>
          <exclude>**/*.~*</exclude>
          <exclude>**/*##*</exclude>
          <exclude>**/*.09-09-07</exclude>
          <exclude>**/*.09-07-02</exclude>
          <exclude>**/*.11-02-10</exclude>
          <exclude>**/*.jpg</exclude>
        </excludes>
      </testResource>
    </testResources>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.11.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.3.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.1.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.6.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.4.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>aspectj-maven-plugin</artifactId>
          <version>1.14.0</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <!-- Add aspectj sources -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src-aj</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Compile aspects -->
      <plugin>
        <!-- https://dev-aspectj.github.io/aspectj-maven-plugin/index.html -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>aspectj-maven-plugin</artifactId>
        <configuration>
          <ajdtBuildDefFile>build.ajproperties</ajdtBuildDefFile>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <complianceLevel>1.8</complianceLevel>
              <source>1.8</source>
              <target>1.8</target>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
        </configuration>
        <executions>
          <execution>
            <id>assemble-all</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!-- <workingDirectory>${project.basedir}</workingDirectory> -->
          <!-- <forkCount>4</forkCount> -->
          <reuseForks>false</reuseForks>
          <!--<threadCount>3</threadCount>-->
          <!-- <useUnlimitedThreads>true</useUnlimitedThreads> -->
          <argLine>-ea -XX:MaxDirectMemorySize=512k -XX:+UseParallelGC</argLine>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
          <!-- <skip>true</skip> -->
          <!-- <skipTests>${skip.surefire.tests}</skipTests> -->
          <!-- NOTE:  -->
          <runOrder>alphabetical</runOrder>
          <additionalClasspathElements>
            <additionalClasspathElement>${project.basedir}/test-model/UserModuleOverrideFromJar.jar</additionalClasspathElement>
          </additionalClasspathElements>
          <includes>
            <include>**/*Test*.java</include>
          </includes>
          <excludes>
            <!-- Known test failures -->
            <exclude>**/pcal/StackTestTest.java</exclude>
            <exclude>**/pcal/TestPCandStackTest.java</exclude>
            <!-- These take too long -->
            <exclude>**/MacroQuicksortTest.java</exclude>
            <exclude>**/MacroRealQuicksortTest.java</exclude>
            <exclude>**/PcalPaxosTest.java</exclude>
            <exclude>**/DetlefsTest.java</exclude>
            <exclude>**/StarkMutexTest.java</exclude>
            <exclude>**/SimpleMultiProcTest.java</exclude>
          </excludes>
          <systemPropertyVariables>
             <basedir>${project.basedir}/</basedir>
             <tlc2.tool.fp.FPSet.impl>tlc2.tool.fp.OffHeapDiskFPSet</tlc2.tool.fp.FPSet.impl>
             <util.FileUtil.milliseconds>true</util.FileUtil.milliseconds>
             <tlc2.tool.distributed.TLCWorker.threadCount>1</tlc2.tool.distributed.TLCWorker.threadCount>
          </systemPropertyVariables>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>mailapi</artifactId>
      <version>1.6.3</version>
    </dependency>

    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>smtp</artifactId>
      <version>1.6.3</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-math3</artifactId>
      <version>3.6.1</version>
    </dependency>

    <!-- REPL.java imports classes from org.jline.  The Toolbox (being an OSGi based Rich Client Platform) -->
    <!-- does not see the jline jars references in customBuild.xml or .classpath.  It has to find jline    -->
    <!-- elsewhere such as in the target platform (TLAToolbox.target) or on Maven Central.  For jline      -->
    <!-- there exists no p2 repository that we could add to our target platform.  However, an OSGi-fied    -->
    <!-- jline exists on Maven Central.                                                                    -->
    <!-- https://mvnrepository.com/artifact/org.jline/jline-reader -->
    <dependency>
      <groupId>org.jline</groupId>
      <artifactId>jline-reader</artifactId>
      <version>3.25.0</version>
    </dependency>

    <dependency>
      <groupId>org.jline</groupId>
      <artifactId>jline-terminal</artifactId>
      <version>3.25.0</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.eclipse.lsp4j/org.eclipse.lsp4j.jsonrpc.debug -->
    <dependency>
      <groupId>org.eclipse.lsp4j</groupId>
      <artifactId>org.eclipse.lsp4j.debug</artifactId>
      <version>0.21.1</version>
    </dependency>

    <dependency>
      <groupId>org.eclipse.lsp4j</groupId>
      <artifactId>org.eclipse.lsp4j.jsonrpc</artifactId>
      <version>0.21.1</version>
    </dependency>

    <!-- Direct dependency, but also a dependency of org.eclipse.lsp4j -->
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.6</version>
    </dependency>

    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
      <version>1.9.2</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.easymock/easymock -->
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>3.3.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

</project>
